commands devops 

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ cd new-local-repo
bash: cd: new-local-repo: No such file or directory

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ mkdir new local repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ cd new local repo
bash: cd: too many arguments

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ cd new local repo
bash: cd: too many arguments

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ rm -rf new local repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ mkdir new-local-repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~
$ cd new-local-repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ git clone git@github.com:surchris/new-local-repo.git
Cloning into 'new-local-repo'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (3/3), done.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ cat .git/config
cat: .git/config: No such file or directory

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ ls
new-local-repo/

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ ls
new-local-repo/

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ ls
new-local-repo/

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ cd new-local-repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls -al
total 5
drwxr-xr-x 1 LegendX 197121  0 Jul  6 09:18 ./
drwxr-xr-x 1 LegendX 197121  0 Jul  6 09:17 ../
drwxr-xr-x 1 LegendX 197121  0 Jul  6 09:18 .git/
-rw-r--r-- 1 LegendX 197121 16 Jul  6 09:18 README.md

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ cat .git/config
[core]
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        symlinks = false
        ignorecase = true
[remote "origin"]
        url = git@github.com:surchris/new-local-repo.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "Master"]
        remote = origin
        merge = refs/heads/Master

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config --global user.name "surchris"

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config user.mail "surajchristopher46@gmail.com"

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config --global --list
user.name=surchris

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config user.email "surajchristopher46@gmail.com"

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config --global --list
user.name=surchris

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config --global user.email "surajchristopher46@gmail.com"

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git config --global --list
user.name=surchris
user.email=surajchristopher46@gmail.com

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "this is my first file in git" >> test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test.txt

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add <test.txt>
bash: syntax error near unexpected token `newline'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add test.txt
warning: in the working copy of 'test.txt', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git commit -m "initial files commit in git"
[Master fec6369] initial files commit in git
 1 file changed, 1 insertion(+)
 create mode 100644 test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 313 bytes | 156.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:surchris/new-local-repo.git
   a18c78a..fec6369  Master -> Master

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ^C

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$

$ cd new-local-repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo
$ cd new-local-repo

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git pull
Already up to date.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
 README.md                          lokesh.xlsx   surchris.csv
'editing some files for 3 states'   normal.docx   test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        editing some files for 3 states


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
 README.md                          lokesh.xlsx   surchris.csv
'editing some files for 3 states'   normal.docx   test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ rm -rf 'editing some files for 3 states'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "for testing undoing creating files" >> file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "
.git/         README.md     lokesh.xlsx   surchris.csv
.gitignore    file1.txt     normal.docx   test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "for testing undoing creating files" file2.sh
for testing undoing creating files file2.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file1.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s
A  .gitignore
?? file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "for testing undoing creating files" files2.txt
for testing undoing creating files files2.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file1.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add file1.txt
warning: in the working copy of 'file1.txt', LF will be replaced by CRLF the nex
t time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        new file:   file1.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git commit -m "adding undoing files"
[Master 461782a] adding undoing files
 2 files changed, 4 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  lokesh.xlsx  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "testing undoing file" file2.txt
testing undoing file file2.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "testing undoing file" >> file2.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file2.sh

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add file2.txt
fatal: pathspec 'file2.txt' did not match any files

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add file2.sh
warning: in the working copy of 'file2.sh', LF will be replaced by CRLF the next
 time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   file2.sh


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "undoing file 3" >> file3.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

adding undoing files which contains all the files























[Master 16274b8] adding undoing files which contains all the files
 Date: Mon Jul 10 08:57:18 2023 +0530
 4 files changed, 6 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 file1.txt
 create mode 100644 file2.sh
 create mode 100644 file3.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6), 534 bytes | 178.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:surchris/new-local-repo.git
   2acc263..16274b8  Master -> Master

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ vi new file1.txt
2 files to edit

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add new
warning: in the working copy of 'new', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  new  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git restore --staged new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s
?? new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ vi new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  new  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "modifying files" >> test.txt file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

no changes added to commit (use "git add" and/or "git commit -a")

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add *
warning: in the working copy of 'test.txt', LF will be replaced by CRLF the next time Git touches it
The following paths are ignored by one of your .gitignore files:
lokesh.xlsx
normal.docx
surchris.csv
hint: Use -f if you really want to add them.
hint: Turn this message off by running
hint: "git config advice.addIgnoredFile false"
warning: in the working copy of 'new', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new
        modified:   test.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git reset HEAD new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   test.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  new  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git commit -m "modified"
[Master 92370ee] modified
 1 file changed, 1 insertion(+)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  new  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ echo "modifying files" new file2.sh
modifying files new file2.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        new

nothing added to commit but untracked files present (use "git add" to track)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s
?? new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git add new
warning: in the working copy of 'new', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is ahead of 'origin/Master' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s
A  new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 300 bytes | 300.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To github.com:surchris/new-local-repo.git
   16274b8..92370ee  Master -> Master

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$



-----














































warning: in the working copy of 'new', LF will be replaced by CRLF the next time Git touches it
Aborting commit due to empty commit message.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status -s
A  new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ cd new-local-repo
bash: cd: new-local-repo: No such file or directory

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag -a V1.5 -m "this is July release point"

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag
V1.5

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git show V1.5
tag V1.5
Tagger: surchris <surajchristopher46@gmail.com>
Date:   Wed Jul 12 08:51:43 2023 +0530

this is July release point

commit 92370eec881b6e74986dafbb8b48df56e3f77329 (HEAD -> Master, tag: V1.5, origin/Master, origin/HEAD, mylocal-git/Mast
er)
Author: surchris <surajchristopher46@gmail.com>
Date:   Mon Jul 10 09:28:38 2023 +0530

    modified

diff --git a/test.txt b/test.txt
index 6d5b931..0b4d06e 100644
--- a/test.txt
+++ b/test.txt
@@ -1,3 +1,4 @@
 this is my first file in git
 editing some files for 3 states
 editing some files for 3 states
+modifying files file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ q
bash: q: command not found

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git status
On branch Master
Your branch is up to date with 'origin/Master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag
V1.5
V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git show V3.5lw
commit 92370eec881b6e74986dafbb8b48df56e3f77329 (HEAD -> Master, tag: V3.5lw, tag: V1.5, origin/Master, origin/HEAD, myl
ocal-git/Master)
Author: surchris <surajchristopher46@gmail.com>
Date:   Mon Jul 10 09:28:38 2023 +0530

    modified

diff --git a/test.txt b/test.txt
index 6d5b931..0b4d06e 100644
--- a/test.txt
+++ b/test.txt
@@ -1,3 +1,4 @@
 this is my first file in git
 editing some files for 3 states
 editing some files for 3 states
+modifying files file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git push origin --tags
Enumerating objects: 1, done.
Counting objects: 100% (1/1), done.
Writing objects: 100% (1/1), 176 bytes | 88.00 KiB/s, done.
Total 1 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:surchris/new-local-repo.git
 * [new tag]         V1.5 -> V1.5
 * [new tag]         V3.5lw -> V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag
V1.5
V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag -d V1.5
Deleted tag 'V1.5' (was 70db1fd)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag
V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag -d V3.5lw
Deleted tag 'V3.5lw' (was 92370ee)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git push origin --delete V1.5 V3.5lw
To github.com:surchris/new-local-repo.git
 - [deleted]         V1.5
 - [deleted]         V3.5lw

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git tag

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git branch
* Master

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (Master)
$ git checkout -b dev
Switched to a new branch 'dev'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  new  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git branch
  Master
* dev

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ echo "making changes in dev branch" >> test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ echo "making changes in dev branch" >> file1.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git status
On branch dev
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   new

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file1.txt
        modified:   test.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git add -A
warning: in the working copy of 'file1.txt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'test.txt', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git status
On branch dev
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   file1.txt
        new file:   new
        modified:   test.txt


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git commit -m "committed in dev branch"
[dev f319279] committed in dev branch
 3 files changed, 6 insertions(+)
 create mode 100644 new

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git status
On branch dev
nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (dev)
$ git checkout master
Switched to branch 'master'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ ls
README.md  file1.txt  file2.sh  file3.sh  lokesh.xlsx  normal.docx  surchris.csv  test.txt

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git branch hotfix

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git branch
  Master
  dev
  hotfix

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git checkout hotfix
Switched to branch 'hotfix'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ echo "correcting error in hotfix branch to clear error in prod" >> file2.sh

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$
Display all 4998 possibilities? (y or n)
!
./
69fe178f-26e7-43a9-aa7d-2b616b672dde_eventlogservice.dll
6bea57fb-8dfb-4177-9ae8-42e8b3529933_RuntimeDeviceInstall.dll
:
ACPBackgroundManagerPolicy.dll
AJRouter.dll
APHostClient.dll
APHostRes.dll
APHostService.dll
APMon.dll
APMonUI.dll
ARP.EXE
AUDIOKSE.dll
AarSvc.dll
AboutSettingsHandlers.dll
AboveLockAppHost.dll
AcGenral.dll
AcLayers.dll
AcSpecfc.dll
AcWinRT.dll
AcXtrnal.dll
AccountsRt.dll
ActionCenter.dll
ActionCenterCPL.dll
ActionQueue.dll
ActivationClient.dll
ActivationManager.dll
ActiveSyncCsp.dll
ActiveSyncProvider.dll
AdaptiveCards.dll
AddressParser.dll
AdvancedEmojiDS.dll
Analog.Shell.Broker.dll
AnalogCommonProxyStub.dll
ApiSetHost.AppExecutionAlias.dll
AppContracts.dll

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git status
On branch hotfix
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file2.sh

no changes added to commit (use "git add" and/or "git commit -a")

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git add -A
warning: in the working copy of 'file2.sh', LF will be replaced by CRLF the next time Git touches it

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git commit -m "hotfix changes"
[hotfix 1e80fde] hotfix changes
 1 file changed, 1 insertion(+)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git push
fatal: The current branch hotfix has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin hotfix

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git push --set-upstream origin hotfix
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 322 bytes | 161.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote:
remote: Create a pull request for 'hotfix' on GitHub by visiting:
remote:      https://github.com/surchris/new-local-repo/pull/new/hotfix
remote:
To github.com:surchris/new-local-repo.git
 * [new branch]      hotfix -> hotfix
branch 'hotfix' set up to track 'origin/hotfix'.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git status
On branch hotfix
Your branch is up to date with 'origin/hotfix'.

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (hotfix)
$ git checkout master
Switched to branch 'master'

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git merge hotfix
Updating 92370ee..1e80fde
Fast-forward
 file2.sh | 1 +
 1 file changed, 1 insertion(+)

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git merge hotfix
Already up to date.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> master


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git status
On branch master
nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push -A
error: unknown switch `A'
usage: git push [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --repo <repository>   repository
    --all                 push all branches
    --branches            alias of --all
    --mirror              mirror all refs
    -d, --delete          delete refs
    --tags                push tags (can't be used with --all or --branches or --mirror)
    -n, --dry-run         dry run
    --porcelain           machine-readable output
    -f, --force           force updates
    --force-with-lease[=<refname>:<expect>]
                          require old value of ref to be at this value
    --force-if-includes   require remote updates to be integrated locally
    --recurse-submodules (check|on-demand|no)
                          control recursive pushing of submodules
    --thin                use thin pack
    --receive-pack <receive-pack>
                          receive pack program
    --exec <receive-pack>
                          receive pack program
    -u, --set-upstream    set upstream for git pull/status
    --progress            force progress reporting
    --prune               prune locally removed refs
    --no-verify           bypass pre-push hook
    --follow-tags         push missing but relevant tags
    --signed[=(yes|no|if-asked)]
                          GPG sign the push
    --atomic              request atomic transaction on remote side
    -o, --push-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$  git push --set-upstream origin master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/surchris/new-local-repo/pull/new/master
remote:
To github.com:surchris/new-local-repo.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
Everything up-to-date

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push --set-upstream origin dev
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 12 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 473 bytes | 236.00 KiB/s, done.
Total 5 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote:
remote: Create a pull request for 'dev' on GitHub by visiting:
remote:      https://github.com/surchris/new-local-repo/pull/new/dev
remote:
To github.com:surchris/new-local-repo.git
 * [new branch]      dev -> dev
branch 'dev' set up to track 'origin/dev'.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git checkout master
Already on 'master'
Your branch is up to date with 'origin/master'.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git merge hotfix
Already up to date.

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
Everything up-to-date

LegendX@LAPTOP-NDLL5RO3 MINGW64 ~/new-local-repo/new-local-repo (master)
$ git push
Everything up-to-date


